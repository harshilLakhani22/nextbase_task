services:
  mongo:
    image: mongo:7
    restart: unless-stopped
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    healthcheck:
      # Use mongosh (included in mongo:7 image) instead of old `mongo`
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ../backend
    restart: unless-stopped
    ports:
      - 4000:4000
    environment:
      - MONGO_URI=mongodb://mongo:27017/nextbase
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=dev_jwt_secret
      # Serve entire uploads folder (so /uploads/thumbnails is reachable)
      - UPLOAD_PATH=/app/uploads
      - PORT=4000
      - API_URL=http://backend:4000
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build: ../worker
    restart: unless-stopped
    environment:
      - MONGO_URI=mongodb://mongo:27017/nextbase
      - REDIS_URL=redis://redis:6379
      - THUMBNAIL_PATH=/app/uploads/thumbnails
      - UPLOAD_PATH=/app/uploads
      - API_URL=http://backend:4000
    volumes:
      - uploads_data:/app/uploads
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build: ../frontend
    restart: unless-stopped
    ports:
      - 3000:3000
    environment:
      # IMPORTANT: backend is on the docker network as `backend`, not `localhost`
      - NEXT_PUBLIC_API_URL=http://backend:4000
    depends_on:
      - backend

volumes:
  mongo_data:
  uploads_data:
